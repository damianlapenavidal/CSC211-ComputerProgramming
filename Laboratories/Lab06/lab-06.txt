Question 1. What is the largest size string we could store into this variable?
-----------
9 characters

Question 2. What is the largest size string we could store into an arbitrary variable of size n?
-----------
n-1 characters

Question 3. What do you think will happen if a string has no null terminator?
-----------
It will not know where the string ends

Question 4. What does this mean we can do with strings to look for where it ends?
-----------
Look for 0

Question 7. Look through the documentation for the String class. Learn what the copy() function does, 
demonstrate you understand how to use it by writing a function utilizing it, and write a comment explaining 
what each parameter to the function is, as well as what is happening.
-----------
#include <iostream>
#include <string>

// char destination is the array that is going to hold the copied string value
// const char course is the initial position of the string that is to be copied, the source of the string

void copy_string(char destination[], const char source[]) {
    int i = 0;
    while (source[i] != '\0') {
        destination[i] = source[i];
        i++;
    }
    destination[i] = '\0';
}

int main() {
    const char source[] = "Hello, World!"; // source string
    
    char destination[50]; // destination to hold string
    
    std::cout << "Source: " << source << std::endl; //displays original source
    copy_string(destination, source);    // Call the copy function
    
    std::cout << "Destination: " << destination << std::endl;     // Display copied string
    
    return 0;
}


Question 8. Look through the documentation for the String class. Learn what the swap() function does, 
demonstrate you understand how to use it by writing a function utilizing it, and write a comment explaining 
what each parameter to the function is, as well as what is happening.
-----------
#include <iostream>
#include <cstring>
#include <algorithm>


int main(){
    // The swap function swaps the variables in a function for whatever operation needs to be fulfilled
   
    int x = 10;    
    int y = 20;                        
    std::swap(x,y);                            


    std::vector<int> foo (4,x), bar (6,y);       // foo:4x20 bar:6x10
    std::swap(foo,bar);                          // foo:6x10 bar:4x20


    std::cout << "foo contains:";
    for (std::vector<int>::iterator it=foo.begin(); it!=foo.end(); ++it)
    std::cout << ' ' << *it;
    std::cout << '\n';


  return 0;
}

Question 9. Look through the documentation for the String class. Learn what the insert() function does, 
demonstrate you understand how to use it by writing a function utilizing it, and write a comment explaining 
what each parameter to the function is, as well as what is happening. Note that this function has multiple versions, why is that?
-----------
#include <iostream>
#include <string>


int main () {


    // String allows for different variables tpp placed in different areas of the code
    // The different string versions do different functions like copying values, searching the number of characters in a string, and measuring range of variables.
    std::string str="to be question";
    std::string str2="the ";
    std::string str3="or not to be";
    std::string::iterator it;


    // used in the same order as described above:
    str.insert(6,str2);                 // to be (the )question
    str.insert(6,str3,3,4);             // to be (not )the question
    str.insert(10,"that is cool",8);    // to be not (that is )the question
    str.insert(10,"to be ");            // to be not (to be )that is the question
    str.insert(15,1,':');               // to be not to be(:) that is the question
    it = str.insert(str.begin()+5,','); // to be(,) not to be: that is the question
    str.insert (str.end(),3,'.');       // to be, not to be: that is the question(...)
    str.insert (it+2,str3.begin(),str3.begin()+3); // (or )


    std::cout << str << '\n';
    return 0;
}


Question 10. Using sstream: Write a C++ program that reads a string containing two numbers separated by a space, 
adds them together, and outputs the result.
-----------
#include <iostream>
#include <sstream>


int main(){
    std::string input;


    std::cout << "Enter two numbers separated by a space: ";
    std::getline(std::cin, input);


    std::istringstream iss(input);
    int num1, num2;
   
    iss >> num1 >> num2;


    std::cout<< "The sum of your two numbers is " << (num1+num2);


    return 0;
}

Question 11. Using sstream: Write a C++ program that reads a string containing multiple words separated by spaces, 
counts the number of words, and outputs the count.
-----------
#include <iostream>
#include <sstream>
#include <string>
using namespace std;

int countWords(const std::string& str) {
    stringstream ss(str);
    string word;
    int count = 0;

    while (ss >> word) {
        count++;
    }

    return count;
}

int main() {
    string input;
    
    getline(std::cin, input);

    int wordCount = countWords(input);

    cout << "Number of words: " << wordCount << std::endl;

    return 0;
}


Question 12. Using sstream:Write a C++ program that reads a string containing a sequence of integers separated by commas, 
calculates the sum of the integers, and outputs the result.
-----------
#include <iostream>
#include <sstream>
#include <string>
using namespace std;

int sumIntegers(const string& input) {
    stringstream ss(input);
    string token;
    int sum = 0;
    
    while (getline(ss, token, ',')) {
        sum += stoi(token);
    }
    
    return sum;
}

int main() {
    string input;
    getline(cin, input);
    
    int result = sumIntegers(input);
    cout << "Sum of integers: " << result << endl;
    
    return 0;
}